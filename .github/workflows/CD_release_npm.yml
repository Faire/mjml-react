name: NPM CD workflow

on:
  # release:
  #   # This specifies that the build will be triggered when we publish a release
  #   types: [published]
  # pull_request:
  # types:
  #   - closed

  push:
    branches:
      - release-v3

jobs:
  bump_release_if_merged:
    # if: github.event.pull_request.merged == true
    name: Publish the package
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        # with:
        #   # "ref" specifies the branch to check out.
        #   # "github.event.release.target_commitish" is a global variable and specifies the branch the release targeted
        #   ref: ${{ github.event.release.target_commitish }}
      # install Node.js
      - name: Use Node.js 14
        uses: actions/setup-node@v1
        with:
          node-version: 14
          # Specifies the registry, this field is required!
          registry-url: https://registry.npmjs.org/

      - name: Build
        run: |
          yarn install
          yarn build
      - name: Format
        run: yarn prettier --check .
      - name: Lint
        run: yarn lint
      - name: Test
        run: yarn test
      - name: Validate generate-mjml-react.ts has been run
        run: ./scripts/validateMjmlReactHasBeenRun.sh

      # # clean install of your projects' deps. We use "npm ci" to avoid package lock changes
      # - run: npm ci
      # # set up git since we will later push to the repo
      # - run: git config --global user.name "GitHub CD bot"
      # - run: git config --global user.email "github-cd-bot@example.com"

      - name: Upgrade the version in package.json (fix later)
        run: npm version 3.0.2-test #${{ github.event.release.tag_name }}
      - name: Publish to NPM
        run: npm publish --dry-run
        env:
          # Use a token to publish to NPM. See below for how to set it up
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # # push the version changes to GitHub
      # - run: git push
      #   env:
      #     # The secret is passed automatically. Nothing to configure.
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
